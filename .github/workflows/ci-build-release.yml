name: ci-build-release

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0                # fetch the whole repo history

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.10'
          channel: 'stable'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
      - run: flutter --version

      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.0.2

      - name: Init keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        run: |
          pwd
          echo $KEYSTORE_BASE64 | base64 -di > android/app/key.jks
          echo storePassword=$STORE_PASSWORD >> android/key.properties
          echo keyPassword=$KEY_PASSWORD >> android/key.properties
          echo keyAlias=$KEY_ALIAS >> android/key.properties
          echo storeFile=key.jks >> android/key.properties
          ls -1 ./android/key.*

      - name: Prepare to build
        run: |
          chmod +x ./android/gradlew
          echo git: `which git`
          echo flutter: `which flutter`
          echo java: `which java`
          echo gradle: `which gradle`
          flutter pub get

      - name: Build release
        uses: gradle/gradle-build-action@v2
        with:
          build-root-directory: android
          arguments:
            assembleRelease

      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          tag: "v0.3.1"
          artifacts: build/app/outputs/apk/release/*.apk
          body: "A new version released."
          token: ${{ secrets.GITHUB_TOKEN }}

#      - name: Upload by webdav
#        uses: bxb100/action-upload-webdav@v1
#        with:
#          webdav_address: ${{secrets.webdav_address}}
#          webdav_username: ${{secrets.webdav_username}}
#          webdav_password: ${{secrets.webdav_password}}
#          webdav_upload_path: "/fime"
#          files: build/app/outputs/apk/release/*.apk
#
#      - name: Publish apk
#        uses: actions/upload-artifact@v3
#        with:
#          name: release-packages
#          path:
#            build/app/outputs/apk/release/*.apk
